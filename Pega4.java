/* EXERCISE:
 * 
 * Using inner class discussed in class ,simulate that you are playing 4:

The program  should  continue  running  until one of these  two situations happen :    

            1. Press  Ok on  the  JOptionPane  ( if you  press  the button it  should  say  " You lost  !!!").
            2. If the number entered comes out on the four hit you won.
            
The interval is every  2  seconds and that makes a "beep" .

Note : Investigate  how to  generate  numbers  at  random .

The output would be  as  follows :

-------------------------------------------------- -------------------------------------------------

Enter a number between 1000 and 9999: 3329

12/11/2017 09:50:23:

   thrown # 1: 3214

   thrown #2: 8214

   thrown #3: 1227

   thrown #4: 5619

   thrown #5: 6446

   thrown #6: 3329

You won !!!

*/



package edu.pupr.Pega4;

import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;

import java.util.Scanner;
import java.util.Random;


/**
 * 
 * 
 * @author Edwin Melendez Lopez #89139
 * 
 * Filename: Pega4.java
 * 
 * Date: 8 de febrero de 2018
 * 
 * Description: Program that uses inner classes to simulate a gambling game which is the Pega4. Rules are simple, if the number the user enters matches
 * 				the random number generated by the program, the User wins! if not then better luck next time. 
 *  
 * 			History:
 * 			02/04/2018 - Created Program. EML
 *  		02/04/2018 - Added Pega4. EML
 * 			02/04/2018 - Added TalkingClock Class. EML
 * 			02/04/2018 - Modified the TalkingClock Class by adding for's. EML
 * 			02/04/2018 - Fixed some errors. EML
 * 
 * 			02/05/2018 - Added the java utility Random to generate random numbers. EML
 * 			02/05/2018 - Added a prototype for the range of the numbers. EML
 * 			02/05/2018 - Added an exception for not accepting the values that are < 1000 or > 9999. EML
 * 			02/05/2018 - Tested Exception. EML
 * 
 * 			02/07/2018 - Added JOptionPane.showConfirmDialog method. EML
 * 			02/07/2018 - Moved commented method inside of @Override actionPerformed to the main() of Pega4. EML
 * 			02/07/2018 - Modified boolean variables. EML
 * 			02/07/2018 - Tested the YOU WINN AND YOU LOSE if's, it works. Now we need to make it stop when it actually finds it.
 * 
 * 
 * 			02/08/2018 - Tested Program and documentation complete. EML
 * 			02/08/2018 - Documentation double-checked and ready for submit. EML
 *
 */


public class Pega4
{

	public static void main(String[] args) throws Exception 
	{
		// Instead of 1000 milliseconds, we change it to 2000 so it would be every two seconds
		TalkingClock clock = new TalkingClock(2000, true, 1000, 10000, true);
		
        clock.start();
        
        JOptionPane.showMessageDialog(null, "Quit Local Inner class program?");
        
        System.exit(0);

	} // end main

	
} // end public class Pega4



class TalkingClock
{
	
    private int interval; // Interval is the period. In this case every 2 seconds.
    private boolean beep; // beep that makes after every throw.
    
    int min = 1000; // minimum range for the numbers.
    int max = 10000; // Because since the numbers start at 0, the limit is 10000 instead of 9999.
 
    boolean matchedNum = false;

    // Constructor
    /**
     * @param interval - Interval is the period. In this case every 2 seconds.
     * @param beep - beep sound that the computer makes every time it does a throw.
     * @param min - minimum range for the numbers is 1000
     * @param max - Max number is 10000 , Because since the numbers start at 0, the limit is 10000 instead of 9999.
     * @param matchedNum - variable used to compare between the number entered by the user and the number generated by the computer.
     */
    
    public TalkingClock(int interval, boolean beep, int min, int max, boolean matchedNum)
    {
    	
        this.interval = interval;
        this.beep = beep;
        this.min = min;
        this.max = max;
        this.matchedNum = matchedNum;
    }
    
    /**
     * @throws Exception - Exception used to make a range from 1000 and 9999. 
     */
   
    public void start() throws Exception 
    {
    	
    	Scanner userInput = new Scanner(System.in); // used for user input.
    	int number; // number entered by the user.
		
    	
		System.out.println("Lets see if you're lucky and win the Pega 4! Roll the dice! ");
		System.out.println("Enter a number between 1000 and 9999: ");
		number = userInput.nextInt();
		
		if (number < 1000 || number > 9999) 
		{
			
			throw new Exception("That's not within the range specified."
					+ " Please input a number between 1000 and 9999");
		}
    	
        
        class TimerPrinter implements ActionListener 
        {
        
            @Override
            public void actionPerformed(ActionEvent e) 
            {
                Date now = new Date();
                Random randomNum = new Random(); // a random 
                int randomInt;
                int counter = 1; // counter to keep a number of throws before finally matching a number

                System.out.println("At the tone, the time is " + now);
                
                	
                // Range form min to max
                randomInt = min + randomNum.nextInt(max - min);

                System.out.print("Throw #");
                System.out.print((counter++) + ": " + randomInt);
                System.out.println("\n");
                
                counter++; // No esta counting...

                Toolkit.getDefaultToolkit().beep();

                // conditions to validate if the number of the user enter is matched with the number created by the computer.
                if(randomInt == number) 
                {
                	 matchedNum = true;
                     System.out.println("YOU WIN! CONGRATS!");
                     
                     System.exit(0);
                     
                } // end if.
                     	  
                else
                {
                	matchedNum = false;
                	System.out.println("YOU LOSE! BETTER LUCK NEXT TIME!");
                		
                } // end else
                	
                
                System.out.println(number);
                         	
             
                if(beep)
                    Toolkit.getDefaultToolkit().beep();
                
                
            } // end actionPerformed
            
        } // end class TimePrinter
     
    
        ActionListener listener = new TimerPrinter();
        Timer t = new Timer(interval, listener);
        
        t.start();
        
    } // end start
   
    
} // end public class Pega4